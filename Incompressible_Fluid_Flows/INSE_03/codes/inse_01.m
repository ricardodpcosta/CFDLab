% Auto-generated by generate_code.py

% Global constants
global rO = 1.0;
global rI = 0.5;
global nu = 1.0;
global rho = 1.0;
global omegaO = 1.0;
global omegaI = -2.0;
global pi = 3.141592653589793;

% Function p
function res = p(x, y)
    global rO;
    global rI;
    global nu;
    global rho;
    global omegaO;
    global omegaI;
    global pi;
    res = rI.*rho.*cos(alpha.*theta/2)./r;
end

% Function u
function res = u(x, y)
    global rO;
    global rI;
    global nu;
    global rho;
    global omegaO;
    global omegaI;
    global pi;
    res = zeros(2,1);
    res(1) = alpha.*u0.*(-rI + rO).*sin(alpha.*theta/2).*sin(beta.*pi.*(r - rI)./(-rI + rO)). ...
        *cos(theta)./(2*beta.*pi.*r) - u0.*sin(theta).*cos(alpha.*theta/2).*cos(beta.*pi.*(r - rI)./( ...
        -rI + rO));
    res(2) = alpha.*u0.*(-rI + rO).*sin(theta).*sin(alpha.*theta/2).*sin(beta.*pi.*(r - rI)./(-rI ...
        + rO))./(2*beta.*pi.*r) + u0.*cos(theta).*cos(alpha.*theta/2).*cos(beta.*pi.*(r - rI)./(-rI ...
        + rO));
end

% Function f
function res = f(x, y)
    global rO;
    global rI;
    global nu;
    global rho;
    global omegaO;
    global omegaI;
    global pi;
    res = zeros(2,1);
    res(1) = -(alpha.^2.*beta.*nu.*pi.*r.*rI.^2.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*beta.*nu.*pi.*r.*rI.*rO.*u0.*cos(alpha.*theta/2). ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + alpha.^2.*beta.*nu.*pi.*r.*rO.^2.*u0. ...
        *cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*nu. ...
        *rI.^3.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) + 6 ...
        *alpha.^2.*nu.*rI.^2.*rO.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha. ...
        *theta/2) - 6*alpha.^2.*nu.*rI.*rO.^2.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI ...
        - rO)).*cos(alpha.*theta/2) + 2*alpha.^2.*nu.*rO.^3.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)).*cos(alpha.*theta/2) - 2*alpha.*beta.*pi.*r.^2.*rI.^2.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) - 2*alpha. ...
        *beta.*pi.*r.^2.*rI.^2.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 + 4*alpha.*beta.*pi.*r.^2.*rI.*rO.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) + 4*alpha. ...
        *beta.*pi.*r.^2.*rI.*rO.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 - 2*alpha.*beta.*pi.*r.^2.*rO.^2.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) - 2*alpha. ...
        *beta.*pi.*r.^2.*rO.^2.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 - 2*alpha.*beta.*pi.*r.*rI.^3.*sin(alpha.*theta/2) + 4 ...
        *alpha.*beta.*pi.*r.*rI.^2.*rO.*sin(alpha.*theta/2) - 2*alpha.*beta.*pi.*r.*rI.*rO.^2. ...
        *sin(alpha.*theta/2) + 2*alpha.*r.*rI.^3.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) - 6*alpha.*r.*rI.^2.*rO.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) + 6*alpha.*r.*rI.*rO.^2.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) - 2*alpha.*r.*rO.^3.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO)) + 4*beta.^3.*nu.*pi.^3.*r.^3.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) + 4*beta.^2.*nu.*pi.^2.*r.^2.*rI.*u0.*sin(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) - 4*beta.^2.*nu.*pi.^2.*r.^2.*rO.*u0.*sin(beta. ...
        *pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) + 4*beta.*nu.*pi.*r.*rI.^2. ...
        *u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 8*beta.*nu. ...
        *pi.*r.*rI.*rO.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) ...
        + 4*beta.*nu.*pi.*r.*rO.^2.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO))).*sin(theta)./(4*beta.*pi.*r.^3.*rI.^2 - 8*beta.*pi.*r.^3.*rI.*rO + 4*beta.*pi. ...
        *r.^3.*rO.^2) + (alpha.^3.*beta.*nu.*pi.*rI.^2.*u0.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)) - 2*alpha.^3.*beta.*nu.*pi.*rI.*rO.*u0.*sin(alpha.*theta/2). ...
        *sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + alpha.^3.*beta.*nu.*pi.*rO.^2.*u0. ...
        *sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta. ...
        *pi.*r.*rI.^2.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI ...
        - rO)).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rI.^2. ...
        *u0.^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2. ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.^2.*beta.*pi.*r.*rI.*rO. ...
        *u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)). ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.^2.*beta.*pi.*r.*rI.*rO. ...
        *u0.^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2. ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rO.^2.*u0.^2. ...
        *sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(beta.*pi. ...
        *r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rO.^2.*u0.^2.*sin(beta.*pi. ...
        *r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2.*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*rI.^3.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r. ...
        /(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 + 6*alpha.^2.*rI.^2.*rO.*u0.^2.*sin(alpha.*theta ...
        /2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 - 6*alpha.^2.*rI.*rO.^2. ...
        *u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 + 2 ...
        *alpha.^2.*rO.^3.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO)).^2 + 4*alpha.*beta.^3.*nu.*pi.^3.*r.^2.*u0.*sin(alpha.*theta/2).*sin(beta.*pi.*r. ...
        /(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.*beta.^2.*nu.*pi.^2.*r.*rI.*u0.*sin(alpha. ...
        *theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 4*alpha.*beta.^2.*nu.*pi.^2. ...
        *r.*rO.*u0.*sin(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 8 ...
        *beta.^2.*pi.^2.*r.^2.*rI.*u0.^2.*cos(alpha.*theta/2).^2.*cos(beta.*pi.*r./(rI - rO) - beta. ...
        *pi.*rI./(rI - rO)).^2 + 8*beta.^2.*pi.^2.*r.^2.*rO.*u0.^2.*cos(alpha.*theta/2).^2.*cos(beta. ...
        *pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 - 8*beta.^2.*pi.^2.*r.*rI.^2.*cos(alpha.*theta ...
        /2) + 8*beta.^2.*pi.^2.*r.*rI.*rO.*cos(alpha.*theta/2)).*cos(theta)./(8*beta.^2.*pi.^2.*r.^3. ...
        *rI - 8*beta.^2.*pi.^2.*r.^3.*rO);
    res(2) = (alpha.^2.*beta.*nu.*pi.*r.*rI.^2.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*beta.*nu.*pi.*r.*rI.*rO.*u0.*cos(alpha.*theta/2). ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + alpha.^2.*beta.*nu.*pi.*r.*rO.^2.*u0. ...
        *cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*nu. ...
        *rI.^3.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) + 6 ...
        *alpha.^2.*nu.*rI.^2.*rO.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha. ...
        *theta/2) - 6*alpha.^2.*nu.*rI.*rO.^2.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI ...
        - rO)).*cos(alpha.*theta/2) + 2*alpha.^2.*nu.*rO.^3.*u0.*sin(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)).*cos(alpha.*theta/2) - 2*alpha.*beta.*pi.*r.^2.*rI.^2.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) - 2*alpha. ...
        *beta.*pi.*r.^2.*rI.^2.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 + 4*alpha.*beta.*pi.*r.^2.*rI.*rO.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) + 4*alpha. ...
        *beta.*pi.*r.^2.*rI.*rO.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 - 2*alpha.*beta.*pi.*r.^2.*rO.^2.*u0.^2.*sin(alpha.*theta ...
        /2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2.*cos(alpha.*theta/2) - 2*alpha. ...
        *beta.*pi.*r.^2.*rO.^2.*u0.^2.*sin(alpha.*theta/2).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).^2 - 2*alpha.*beta.*pi.*r.*rI.^3.*sin(alpha.*theta/2) + 4 ...
        *alpha.*beta.*pi.*r.*rI.^2.*rO.*sin(alpha.*theta/2) - 2*alpha.*beta.*pi.*r.*rI.*rO.^2. ...
        *sin(alpha.*theta/2) + 2*alpha.*r.*rI.^3.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) - 6*alpha.*r.*rI.^2.*rO.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) + 6*alpha.*r.*rI.*rO.^2.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi. ...
        *rI./(rI - rO)) - 2*alpha.*r.*rO.^3.*u0.^2.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO)) + 4*beta.^3.*nu.*pi.^3.*r.^3.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) + 4*beta.^2.*nu.*pi.^2.*r.^2.*rI.*u0.*sin(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) - 4*beta.^2.*nu.*pi.^2.*r.^2.*rO.*u0.*sin(beta. ...
        *pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2) + 4*beta.*nu.*pi.*r.*rI.^2. ...
        *u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 8*beta.*nu. ...
        *pi.*r.*rI.*rO.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) ...
        + 4*beta.*nu.*pi.*r.*rO.^2.*u0.*cos(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO))).*cos(theta)./(4*beta.*pi.*r.^3.*rI.^2 - 8*beta.*pi.*r.^3.*rI.*rO + 4*beta.*pi. ...
        *r.^3.*rO.^2) + (alpha.^3.*beta.*nu.*pi.*rI.^2.*u0.*sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI ...
        - rO) - beta.*pi.*rI./(rI - rO)) - 2*alpha.^3.*beta.*nu.*pi.*rI.*rO.*u0.*sin(alpha.*theta/2). ...
        *sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + alpha.^3.*beta.*nu.*pi.*rO.^2.*u0. ...
        *sin(alpha.*theta/2).*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta. ...
        *pi.*r.*rI.^2.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI ...
        - rO)).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rI.^2. ...
        *u0.^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2. ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.^2.*beta.*pi.*r.*rI.*rO. ...
        *u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)). ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.^2.*beta.*pi.*r.*rI.*rO. ...
        *u0.^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2. ...
        *cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rO.^2.*u0.^2. ...
        *sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(beta.*pi. ...
        *r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 2*alpha.^2.*beta.*pi.*r.*rO.^2.*u0.^2.*sin(beta.*pi. ...
        *r./(rI - rO) - beta.*pi.*rI./(rI - rO)).*cos(alpha.*theta/2).^2.*cos(beta.*pi.*r./(rI - rO) ...
        - beta.*pi.*rI./(rI - rO)) - 2*alpha.^2.*rI.^3.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r. ...
        /(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 + 6*alpha.^2.*rI.^2.*rO.*u0.^2.*sin(alpha.*theta ...
        /2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 - 6*alpha.^2.*rI.*rO.^2. ...
        *u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 + 2 ...
        *alpha.^2.*rO.^3.*u0.^2.*sin(alpha.*theta/2).^2.*sin(beta.*pi.*r./(rI - rO) - beta.*pi.*rI. ...
        /(rI - rO)).^2 + 4*alpha.*beta.^3.*nu.*pi.^3.*r.^2.*u0.*sin(alpha.*theta/2).*sin(beta.*pi.*r. ...
        /(rI - rO) - beta.*pi.*rI./(rI - rO)) - 4*alpha.*beta.^2.*nu.*pi.^2.*r.*rI.*u0.*sin(alpha. ...
        *theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) + 4*alpha.*beta.^2.*nu.*pi.^2. ...
        *r.*rO.*u0.*sin(alpha.*theta/2).*cos(beta.*pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)) - 8 ...
        *beta.^2.*pi.^2.*r.^2.*rI.*u0.^2.*cos(alpha.*theta/2).^2.*cos(beta.*pi.*r./(rI - rO) - beta. ...
        *pi.*rI./(rI - rO)).^2 + 8*beta.^2.*pi.^2.*r.^2.*rO.*u0.^2.*cos(alpha.*theta/2).^2.*cos(beta. ...
        *pi.*r./(rI - rO) - beta.*pi.*rI./(rI - rO)).^2 - 8*beta.^2.*pi.^2.*r.*rI.^2.*cos(alpha.*theta ...
        /2) + 8*beta.^2.*pi.^2.*r.*rI.*rO.*cos(alpha.*theta/2)).*sin(theta)./(8*beta.^2.*pi.^2.*r.^3. ...
        *rI - 8*beta.^2.*pi.^2.*r.^3.*rO);
end

% Function g
function res = g(x, y)
    global rO;
    global rI;
    global nu;
    global rho;
    global omegaO;
    global omegaI;
    global pi;
    res = 0;
end
