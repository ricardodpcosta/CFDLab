! Auto-generated by generate_code.py

module INSE_02

implicit none

! Global constants
real(8), parameter :: rO = 1.0
real(8), parameter :: rI = 0.5
real(8), parameter :: nu = 1.0
real(8), parameter :: rho = 1.0
real(8), parameter :: omegaO = 1.0
real(8), parameter :: omegaI = -2.0
real(8), parameter :: pi = 3.141592653589793

contains

! Function p
function p(x, y) result(res)
    real(8), intent(in) :: x
    real(8), intent(in) :: y
    real(8) :: res
    res = rho*((1.0d0/2.0d0)*r**2*(-omegaI*rI**2 + omegaO*rO**2)**2/(-rI**2 + rO** 2)**2 + 2*rI**2*rO* &
        *2*(-omegaI + omegaO)*(-omegaI*rI**2 + omegaO* rO**2)*log(r)/(-rI**2 + rO**2)**2 &
        - 1.0d0/2.0d0*rI**4*rO**4*( -omegaI + omegaO)**2/(r**2*(-rI**2 + rO**2)**2) - (-cI &
        + cO)/(pi* (-rI**2 + rO**2)))
end function p

! Subroutine u
subroutine u(x, y, res)
    real(8), intent(in) :: x
    real(8), intent(in) :: y
    real(8), intent(out) :: res(2)
    res(1) = -(r*(-omegaI*rI**2 + omegaO*rO**2)/(-rI**2 + rO**2) + rI**2*rO**2*( -omegaI + omegaO)/(r*( &
        -rI**2 + rO**2)))*sin(theta)
    res(2) = (r*(-omegaI*rI**2 + omegaO*rO**2)/(-rI**2 + rO**2) + rI**2*rO**2*( -omegaI + omegaO)/(r*( &
        -rI**2 + rO**2)))*cos(theta)
end subroutine u

! Subroutine f
subroutine f(x, y, res)
    real(8), intent(in) :: x
    real(8), intent(in) :: y
    real(8), intent(out) :: res(2)
    res(1) = 0
    res(2) = 0
end subroutine f

! Function g
function g(x, y) result(res)
    real(8), intent(in) :: x
    real(8), intent(in) :: y
    real(8) :: res
    res = 0
end function g

end module inse_02
